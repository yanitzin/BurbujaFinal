import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Diana
 */
public class VentasxEmpleado extends javax.swing.JFrame {
    String servidor="localhost", usuario="sa", contra="123";
    java.sql.Connection cn;
    Statement s;
    /**
     * Creates new form VentasxEmpleado
     */
    public VentasxEmpleado() {
        initComponents();
        AutoCompleteDecorator.decorate(ItemEmpleados);
        lblAFecha.setVisible(false);
        fecha2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipoFecha = new javax.swing.ButtonGroup();
        ItemEmpleados = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabla_ventasxempleado = new javax.swing.JTable();
        RegresarMenudeventaxemp = new javax.swing.JButton();
        btnBuscarvE = new javax.swing.JButton();
        UF = new javax.swing.JRadioButton();
        P = new javax.swing.JRadioButton();
        fecha1 = new com.toedter.calendar.JDateChooser();
        lblFecha = new javax.swing.JLabel();
        lblAFecha = new javax.swing.JLabel();
        fecha2 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        ItemEmpleados.setEditable(true);

        jLabel23.setText("Empleados:");

        tabla_ventasxempleado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Empleado", "Ventas Realizadas", "Fecha", "Total en venta($)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tabla_ventasxempleado);

        RegresarMenudeventaxemp.setText("Regresar");
        RegresarMenudeventaxemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresarMenudeventaxempActionPerformed(evt);
            }
        });

        btnBuscarvE.setText("Buscar");
        btnBuscarvE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarvEActionPerformed(evt);
            }
        });

        tipoFecha.add(UF);
        UF.setSelected(true);
        UF.setText("Una sola fecha");
        UF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                UFFocusGained(evt);
            }
        });
        UF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UFActionPerformed(evt);
            }
        });

        tipoFecha.add(P);
        P.setText("Periodo");
        P.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PActionPerformed(evt);
            }
        });

        lblFecha.setText("Fecha:");

        lblAFecha.setText("a");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(RegresarMenudeventaxemp)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblFecha)
                        .addGap(18, 18, 18)
                        .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblAFecha)
                        .addGap(18, 18, 18)
                        .addComponent(fecha2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(btnBuscarvE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(UF)
                        .addGap(78, 78, 78)
                        .addComponent(P, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ItemEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(ItemEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UF, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(P))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAFecha)
                            .addComponent(lblFecha, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscarvE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RegresarMenudeventaxemp)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MostrarVentasPorFecha(String f, String nombre) throws SQLException, ClassNotFoundException{
        /*String sql="select count(v.id_venta), sum(v.total_venta) from usuario u,venta v" +
            " where  nombre_usuario ='"+nombre+"' and v.id_usuario = u.id_usuario";*/
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
        cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
        s = cn.createStatement();
        String sql = "SELECT COUNT(v.id_venta) as cantidad, SUM(v.total_venta) as suma, v.fecha as fecha, u.nombre_usuario as nombre "
                + "FROM usuario u, venta v "
                + "WHERE v.fecha = '"+f+"' AND u.nombre_usuario = '"+nombre+"' AND v.id_usuario = u.id_usuario "
                + "GROUP BY fecha, nombre_usuario;";
        ResultSet rs = s.executeQuery(sql);
        DefaultTableModel m=(DefaultTableModel)tabla_ventasxempleado.getModel();
        m.setRowCount(0);
        while(rs.next()){
            Object []fila={rs.getString("nombre"), 
                    rs.getString("cantidad"), 
                    rs.getDate("fecha"),
                    rs.getFloat("suma")};
            m.addRow(fila);
        }
    }
    
    private void MostrarVentasPorFechas(String f1, String f2, String nombre) throws SQLException, ClassNotFoundException{
        //String sql = "SELECT * FROM venta WHERE fecha_entrega >= '"+f1+"' AND fecha_entrega <= '"+f2+"';";
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
        cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
        s = cn.createStatement();
        String sql = "SELECT COUNT(v.id_venta) as cantidad, SUM(v.total_venta) as suma, v.fecha as fecha, u.nombre_usuario as nombre "
                + "FROM usuario u, venta v "
                + "WHERE fecha >= '"+f1+"' AND fecha <= '"+f2+"' AND nombre_usuario = '"+nombre+"' AND v.id_usuario = u.id_usuario "
                + "GROUP BY fecha, nombre_usuario;";
        ResultSet rs = s.executeQuery(sql);
        DefaultTableModel m=(DefaultTableModel)tabla_ventasxempleado.getModel();
        m.setRowCount(0);
        while(rs.next()){
            Object []fila={rs.getString("nombre"), 
                    rs.getString("cantidad"), 
                    rs.getDate("fecha"),
                    rs.getFloat("suma")};
            m.addRow(fila);
        }
    }
    
    private ResultSet consulta(String sql){
        ResultSet rs=null;
        try{
            rs = s.executeQuery(sql);
        }catch (SQLException e){
            e.printStackTrace();
        }
        return rs;
    }
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        ItemEmpleados.removeAllItems();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            java.sql.Connection cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            Statement sentencia = cn.createStatement();
            String sql="SELECT nombre_usuario FROM usuario";
            ResultSet rs = sentencia.executeQuery(sql);
            while (rs.next()) {
               ItemEmpleados.addItem(rs.getString("nombre_usuario"));
            }
        }catch (ClassNotFoundException | SQLException e){
            e.printStackTrace();
        }  
    }//GEN-LAST:event_formWindowActivated
 //REGRESA AL MENU DEPENDIENDO DE CUAL VIENE 
    private void RegresarMenudeventaxempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresarMenudeventaxempActionPerformed
        this.dispose();
        String v="";
        String te="";
        String nombreUsuario= VentanaPRINCIPAL.ItemUsuarios.getSelectedItem().toString();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VentasxEmpleado.class.getName()).log(Level.SEVERE, null, ex);
        }
        String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
        java.sql.Connection cn = null;
        try {
            cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
        } catch (SQLException ex) {
            Logger.getLogger(VentasxEmpleado.class.getName()).log(Level.SEVERE, null, ex);
        }
        Statement sentencia = null;
        try {
            sentencia = cn.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(VentasxEmpleado.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet r = null;
        try {
            r = sentencia.executeQuery("select tipo_usuario from usuario where nombre_usuario='"+nombreUsuario+"'");
        } catch (SQLException ex) {
            Logger.getLogger(VentasxEmpleado.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (r!=null){
            try {
                while(r.next())
                    te = r.getString("tipo_usuario");
            } catch (SQLException ex) {
                Logger.getLogger(VentasxEmpleado.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (te.equals("A")){
          //  new MenuAdmin().setVisible(true);
            this.dispose();
        }else if (te.equals("E")){
         //   new MenuEmp().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_RegresarMenudeventaxempActionPerformed

    private void btnBuscarvEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarvEActionPerformed
        try {
            int dia1 = (fecha1.getCalendar().get(Calendar.DAY_OF_MONTH));
            int mes1 =(fecha1.getCalendar().get(Calendar.MONTH) + 1);
            int year1 =(fecha1.getCalendar().get(Calendar.YEAR));
            String f1, nombre = ItemEmpleados.getSelectedItem().toString();
            if(mes1<10){
                f1 =(year1 + "-0" + mes1+ "-" + dia1);
            }else{
                f1 =(year1 + "-" + mes1+ "-" + dia1);
            }
            if(UF.isSelected()==true){
                MostrarVentasPorFecha(f1, nombre);
            }else if (P.isSelected()==true){
                String f2;
                int dia2 = (fecha2.getCalendar().get(Calendar.DAY_OF_MONTH));
                int mes2 =(fecha2.getCalendar().get(Calendar.MONTH) + 1);
                int year2 =(fecha2.getCalendar().get(Calendar.YEAR));
                if(mes2<10){
                    f2 =(year2 + "-0" + mes2+ "-" + dia2);
                }else{
                    f2 =(year2 + "-" + mes2+ "-" + dia2);
                }
                MostrarVentasPorFechas(f1, f2, nombre);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VentasxEmpleado.class.getName()).log(Level.SEVERE, null, ex);
        }
        fecha1.setDate(null);
        fecha2.setDate(null);
        /*String nombre= ItemEmpleados.getSelectedItem().toString();
        String sql="select count(v.id_venta), sum(v.total_venta) from usuario u,venta v" +
        " where  nombre_usuario ='"+nombre+"' and v.id_usuario = u.id_usuario";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            java.sql.Connection cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            Statement sentencia = (Statement) cn.createStatement();
            ResultSet rs = sentencia.executeQuery(sql);
            DefaultTableModel m1=(DefaultTableModel)tabla_ventasxempleado.getModel();
            m1.setRowCount(0);
            while (rs.next()) {
                Object []fila={nombre,rs.getString(1),rs.getString(2)};
                m1.addRow(fila);
            }
        }catch (ClassNotFoundException | SQLException e)
        {
            e.printStackTrace();
        }*/
    }//GEN-LAST:event_btnBuscarvEActionPerformed

    private void UFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UFFocusGained
        
    }//GEN-LAST:event_UFFocusGained

    private void UFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UFActionPerformed
        fecha2.setVisible(false);
        lblAFecha.setVisible(false);
    }//GEN-LAST:event_UFActionPerformed

    private void PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PActionPerformed
        fecha2.setVisible(true);
        lblAFecha.setVisible(true);
    }//GEN-LAST:event_PActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentasxEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentasxEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentasxEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentasxEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentasxEmpleado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ItemEmpleados;
    private javax.swing.JRadioButton P;
    private javax.swing.JButton RegresarMenudeventaxemp;
    private javax.swing.JRadioButton UF;
    private javax.swing.JButton btnBuscarvE;
    private com.toedter.calendar.JDateChooser fecha1;
    private com.toedter.calendar.JDateChooser fecha2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblAFecha;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JTable tabla_ventasxempleado;
    private javax.swing.ButtonGroup tipoFecha;
    // End of variables declaration//GEN-END:variables
}
