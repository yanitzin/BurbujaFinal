
import java.awt.GridLayout;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import javax.swing.JCheckBox;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import java.text.SimpleDateFormat;
import java.util.Date;
import static javax.swing.JOptionPane.showMessageDialog;

public class MenuEmp extends javax.swing.JFrame {
    String servidor="localhost", usuario="sa", contra="123";
    Statement sentenciaD;
    Connection cn;
    Statement sentencia;
    public  float corte=0;
    private String nom;
    private int nfs;
    public int s=0;
    public int p=0;
    public static float ttotal=0,t1;
    private float precio=0;
    private String am;
    private String ap;
    JCheckBox nCheck[] = new JCheckBox[65]; //genera los checbox de servicio en promocion
    public int i=0;  
    public int c=0;
    float sub[]=new float[100];
    float sub1[]=new float[100];
    Object [] fila=new Object[0];
    int m;
    //Obtener fecha actual del sistema
    Calendar fecha = new GregorianCalendar();
        int año = fecha.get(Calendar.YEAR);
        int mes = fecha.get(Calendar.MONTH)+1;
        int dia = fecha.get(Calendar.DAY_OF_MONTH);
        String fecha_actual=año+"/"+mes+"/"+dia;
        String fecha_a =año+"-0"+mes+"-"+dia;
        float mr,cambio=0;
        Date date = new Date();
//Caso 1: obtener la hora y salida por pantalla con formato:
        DateFormat hourFormat = new SimpleDateFormat("HH:mm:ss");
    /**
     * Creates new form MenuAdmin
     * @throws java.sql.SQLException
     */
    public MenuEmp() throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null); 
        conectarD();
        AutoCompleteDecorator.decorate(cmbServicioTintoreria);
        AutoCompleteDecorator.decorate(cmbClientesLav);
        AutoCompleteDecorator.decorate(cmbClientesTint);
//--------------------------------------------------------------------------------
        lblHora.setText(hourFormat.format(date));
        lblHORALAV.setText(hourFormat.format(date));
        listCL();
        listCT();
        listarC();
        listServTin();
        listServLav();
        lblEmpleadoLav.setText(VentanaPRINCIPAL.ItemUsuarios.getSelectedItem().toString());
        lblEmpleadoTint.setText(VentanaPRINCIPAL.ItemUsuarios.getSelectedItem().toString());
        MenuAdmin.lblEmpleadoLav.setText(VentanaPRINCIPAL.ItemUsuarios.getSelectedItem().toString());
        fechaActualTint.setText(fecha_actual);
        fechaActualLav.setText(fecha_actual);
        lblFolioTint.setText(NuevoFolio()+"");
        lblFolioLav.setText(NuevoFolio()+"");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jTabbedPane8 = new javax.swing.JTabbedPane();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        pu = new javax.swing.JTabbedPane();
        PanelServiciosEMP = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        Tipo_us = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        lblEmpleadoTint = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        fechaActualTint = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        lblHora = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        jLabel100 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        lblTelClTint = new javax.swing.JLabel();
        lblDirClTint = new javax.swing.JLabel();
        cmbClientesTint = new javax.swing.JComboBox<>();
        jLabel107 = new javax.swing.JLabel();
        jcalFechaEntregaTint = new com.toedter.calendar.JDateChooser();
        lblFolio1 = new javax.swing.JLabel();
        lblFolioTint = new javax.swing.JLabel();
        pnlVenta = new javax.swing.JPanel();
        cmbServicioTintoreria = new javax.swing.JComboBox<>();
        lblCantTintoreria = new javax.swing.JLabel();
        txtCantTintoreria = new javax.swing.JTextField();
        lblDesTintoreria = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtaDescripcionTintoreria = new javax.swing.JTextArea();
        btnAñadirTint = new javax.swing.JButton();
        btnActualizarTint = new javax.swing.JButton();
        btnEliminarTint = new javax.swing.JButton();
        jPanel24 = new javax.swing.JPanel();
        jLabel90 = new javax.swing.JLabel();
        btnCancelarVenta = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblVentaTint = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        lblTotalTint = new javax.swing.JLabel();
        jLabel110 = new javax.swing.JLabel();
        txtMR = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtCMB = new javax.swing.JTextField();
        btnGenerarTin = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        Tipo_us1 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        lblEmpleadoLav = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        fechaActualLav = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        lblHORALAV = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        jLabel97 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        lblTelClLav = new javax.swing.JLabel();
        lblDirClLav = new javax.swing.JLabel();
        cmbClientesLav = new javax.swing.JComboBox<>();
        jLabel106 = new javax.swing.JLabel();
        jcalFechaEntregaLav = new com.toedter.calendar.JDateChooser();
        lblFolioLav = new javax.swing.JLabel();
        lblFolio = new javax.swing.JLabel();
        pnlVenta1 = new javax.swing.JPanel();
        cmbServicioLav = new javax.swing.JComboBox<>();
        lblCantTintoreria1 = new javax.swing.JLabel();
        txtCantLavanderia = new javax.swing.JTextField();
        lblDesTintoreria1 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        txtaDescripcionLavanderia = new javax.swing.JTextArea();
        btnAñadirLav = new javax.swing.JButton();
        btnActualizarLav = new javax.swing.JButton();
        btnEliminarLav = new javax.swing.JButton();
        jPanel32 = new javax.swing.JPanel();
        jLabel102 = new javax.swing.JLabel();
        btnCancelarVentaLav = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        tblVentaLav = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        lblTotalLav = new javax.swing.JLabel();
        jLabel109 = new javax.swing.JLabel();
        txtMR1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtCMB1 = new javax.swing.JTextField();
        btnGenerarLav = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblApPaterno = new javax.swing.JLabel();
        txtApPaterno = new javax.swing.JTextField();
        lblApMaterno = new javax.swing.JLabel();
        txtApMaterno = new javax.swing.JTextField();
        cmbColonia = new javax.swing.JComboBox<>();
        lblColonia = new javax.swing.JLabel();
        lblCalle = new javax.swing.JLabel();
        txtCalle = new javax.swing.JTextField();
        lblNumero = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        lblTelefono = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        btnEliminar3 = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        ConfCuenta = new javax.swing.JMenuItem();
        CambioSesion = new javax.swing.JMenuItem();
        Salir = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("jRadioButtonMenuItem2");

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        pu.setBackground(new java.awt.Color(255, 255, 255));
        pu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                puFocusGained(evt);
            }
        });
        pu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                puMouseClicked(evt);
            }
        });

        PanelServiciosEMP.setBackground(new java.awt.Color(153, 204, 255));
        PanelServiciosEMP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PanelServiciosEMPFocusGained(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(0, 102, 102));

        jPanel33.setBackground(new java.awt.Color(255, 255, 255));
        jPanel33.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Tipo_us.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Tipo_us.setText("EMPLEADO");

        jPanel35.setBackground(new java.awt.Color(255, 255, 255));
        jPanel35.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel52.setText("Empleado:");

        jLabel62.setText("Hora:");

        lblEmpleadoTint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmpleadoTint.setText("-");

        jLabel77.setText("Fecha:");

        fechaActualTint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fechaActualTint.setText("17/03/2018");

        lblHora.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHora.setText("6:00 pm");

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel35Layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(jLabel108))
                    .addGroup(jPanel35Layout.createSequentialGroup()
                        .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel52)
                            .addComponent(jLabel62)
                            .addComponent(jLabel77))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmpleadoTint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fechaActualTint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblHora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel77)
                    .addComponent(fechaActualTint))
                .addGap(3, 3, 3)
                .addComponent(jLabel108)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(lblEmpleadoTint))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(lblHora))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel34.setBackground(new java.awt.Color(255, 255, 255));
        jPanel34.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel100.setText("Cliente:");

        jLabel103.setText("Direccion:");

        jLabel104.setText("Tel.");

        lblTelClTint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTelClTint.setText("-");

        lblDirClTint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDirClTint.setText("-");

        cmbClientesTint.setEditable(true);
        cmbClientesTint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbClientesTintMouseClicked(evt);
            }
        });
        cmbClientesTint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClientesTintActionPerformed(evt);
            }
        });

        jLabel107.setText("Fecha de entrega:");

        lblFolio1.setText("Folio:");

        lblFolioTint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFolioTint.setText("-");

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addComponent(jLabel107)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcalFechaEntregaTint, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel103)
                            .addComponent(jLabel104, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel100, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFolio1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbClientesTint, 0, 196, Short.MAX_VALUE)
                            .addComponent(lblDirClTint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblFolioTint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTelClTint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFolioTint)
                    .addComponent(lblFolio1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel100)
                    .addComponent(cmbClientesTint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel103)
                    .addComponent(lblDirClTint))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel104)
                    .addComponent(lblTelClTint))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel107)
                    .addComponent(jcalFechaEntregaTint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Tipo_us, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(Tipo_us)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(396, Short.MAX_VALUE))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addGap(193, 193, 193)
                    .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(194, Short.MAX_VALUE)))
        );

        cmbServicioTintoreria.setEditable(true);
        cmbServicioTintoreria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona un servicio..." }));

        lblCantTintoreria.setText("Cantidad:");

        lblDesTintoreria.setText("Descripción:");

        txtaDescripcionTintoreria.setColumns(20);
        txtaDescripcionTintoreria.setRows(5);
        jScrollPane5.setViewportView(txtaDescripcionTintoreria);

        btnAñadirTint.setText("Añadir");
        btnAñadirTint.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnAñadirTintMouseMoved(evt);
            }
        });
        btnAñadirTint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAñadirTintMouseClicked(evt);
            }
        });
        btnAñadirTint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirTintActionPerformed(evt);
            }
        });

        btnActualizarTint.setText("Actualizar");
        btnActualizarTint.setEnabled(false);
        btnActualizarTint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarTintActionPerformed(evt);
            }
        });

        btnEliminarTint.setText("Eliminar");
        btnEliminarTint.setEnabled(false);
        btnEliminarTint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarTintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlVentaLayout = new javax.swing.GroupLayout(pnlVenta);
        pnlVenta.setLayout(pnlVentaLayout);
        pnlVentaLayout.setHorizontalGroup(
            pnlVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVentaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDesTintoreria)
                .addGap(10, 10, 10)
                .addGroup(pnlVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlVentaLayout.createSequentialGroup()
                        .addComponent(btnAñadirTint, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(btnActualizarTint, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarTint, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlVentaLayout.createSequentialGroup()
                        .addComponent(cmbServicioTintoreria, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCantTintoreria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantTintoreria))
                    .addComponent(jScrollPane5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlVentaLayout.setVerticalGroup(
            pnlVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVentaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbServicioTintoreria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCantTintoreria)
                    .addComponent(txtCantTintoreria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlVentaLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lblDesTintoreria)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAñadirTint)
                    .addComponent(btnActualizarTint)
                    .addComponent(btnEliminarTint))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));
        jPanel24.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel24.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel24.add(jLabel90, new org.netbeans.lib.awtextra.AbsoluteConstraints(586, 183, -1, -1));

        btnCancelarVenta.setText("Cancelar");
        btnCancelarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarVentaActionPerformed(evt);
            }
        });
        jPanel24.add(btnCancelarVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 310, -1, -1));

        tblVentaTint.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Servicio", "Cantidad", "Subtotal", "Descripcion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVentaTint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVentaTintMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tblVentaTint);

        jPanel24.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 580, 280));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel9.setText("Total de venta:");

        lblTotalTint.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTotalTint.setText("TOTAL");

        jLabel110.setText("  $");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel110)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTotalTint)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTotalTint)
                    .addComponent(jLabel110))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtMR.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMRFocusGained(evt);
            }
        });

        jLabel10.setText("Monto recibido:");

        jLabel17.setText("Cambio:");

        txtCMB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCMBFocusGained(evt);
            }
        });
        txtCMB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCMBActionPerformed(evt);
            }
        });

        btnGenerarTin.setText("Generar");
        btnGenerarTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarTinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(btnGenerarTin, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                            .addGap(53, 53, 53)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel17))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtMR)
                                .addComponent(txtCMB, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addComponent(btnGenerarTin)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlVenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(pnlVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        PanelServiciosEMP.addTab("Tintoreria", jPanel9);

        jPanel10.setBackground(new java.awt.Color(0, 102, 102));

        jPanel30.setBackground(new java.awt.Color(255, 255, 255));
        jPanel30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Tipo_us1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Tipo_us1.setText("EMPLEADO");

        jPanel28.setBackground(new java.awt.Color(255, 255, 255));
        jPanel28.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel51.setText("Empleado:");

        jLabel59.setText("Hora:");

        lblEmpleadoLav.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmpleadoLav.setText("-");

        jLabel75.setText("Fecha:");

        fechaActualLav.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fechaActualLav.setText("17/03/2018");

        lblHORALAV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHORALAV.setText("6:00 pm");

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(jLabel95))
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel51)
                            .addComponent(jLabel59)
                            .addComponent(jLabel75))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmpleadoLav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fechaActualLav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblHORALAV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel75)
                    .addComponent(fechaActualLav))
                .addGap(3, 3, 3)
                .addComponent(jLabel95)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(lblEmpleadoLav))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(lblHORALAV))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel29.setBackground(new java.awt.Color(255, 255, 255));
        jPanel29.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel97.setText("Cliente:");

        jLabel98.setText("Direccion:");

        jLabel99.setText("Tel.");

        lblTelClLav.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTelClLav.setText("-");

        lblDirClLav.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDirClLav.setText("-");

        cmbClientesLav.setEditable(true);
        cmbClientesLav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClientesLavActionPerformed(evt);
            }
        });

        jLabel106.setText("Fecha de entrega:");

        lblFolioLav.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFolioLav.setText("-");

        lblFolio.setText("Folio:");

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addComponent(jLabel106)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcalFechaEntregaLav, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel98)
                            .addComponent(jLabel99, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel97, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFolio, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDirClLav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblFolioLav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbClientesLav, 0, 196, Short.MAX_VALUE)
                            .addComponent(lblTelClLav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFolioLav)
                    .addComponent(lblFolio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel97)
                    .addComponent(cmbClientesLav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel98)
                    .addComponent(lblDirClLav))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel99)
                    .addComponent(lblTelClLav))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel106)
                    .addComponent(jcalFechaEntregaLav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Tipo_us1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel30Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(Tipo_us1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmbServicioLav.setEditable(true);
        cmbServicioLav.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona un servicio..." }));

        lblCantTintoreria1.setText("Cantidad:");

        lblDesTintoreria1.setText("Descripción:");

        txtaDescripcionLavanderia.setColumns(20);
        txtaDescripcionLavanderia.setRows(5);
        jScrollPane10.setViewportView(txtaDescripcionLavanderia);

        btnAñadirLav.setText("Añadir");
        btnAñadirLav.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAñadirLavMouseClicked(evt);
            }
        });
        btnAñadirLav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirLavActionPerformed(evt);
            }
        });

        btnActualizarLav.setText("Actualizar");
        btnActualizarLav.setEnabled(false);
        btnActualizarLav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarLavActionPerformed(evt);
            }
        });

        btnEliminarLav.setText("Eliminar");
        btnEliminarLav.setEnabled(false);
        btnEliminarLav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarLavActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlVenta1Layout = new javax.swing.GroupLayout(pnlVenta1);
        pnlVenta1.setLayout(pnlVenta1Layout);
        pnlVenta1Layout.setHorizontalGroup(
            pnlVenta1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVenta1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDesTintoreria1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlVenta1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlVenta1Layout.createSequentialGroup()
                        .addComponent(cmbServicioLav, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCantTintoreria1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantLavanderia))
                    .addGroup(pnlVenta1Layout.createSequentialGroup()
                        .addComponent(btnAñadirLav, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnActualizarLav, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarLav, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlVenta1Layout.setVerticalGroup(
            pnlVenta1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVenta1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVenta1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbServicioLav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCantTintoreria1)
                    .addComponent(txtCantLavanderia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlVenta1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlVenta1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(lblDesTintoreria1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlVenta1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAñadirLav)
                    .addComponent(btnActualizarLav)
                    .addComponent(btnEliminarLav))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel32.setBackground(new java.awt.Color(255, 255, 255));
        jPanel32.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel32.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel32.add(jLabel102, new org.netbeans.lib.awtextra.AbsoluteConstraints(586, 183, -1, -1));

        btnCancelarVentaLav.setText("Cancelar");
        btnCancelarVentaLav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarVentaLavActionPerformed(evt);
            }
        });
        jPanel32.add(btnCancelarVentaLav, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 320, -1, -1));

        tblVentaLav.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Servicio", "Cantidad", "Subtotal", "Descripcion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVentaLav.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVentaLavMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblVentaLavMouseEntered(evt);
            }
        });
        jScrollPane11.setViewportView(tblVentaLav);

        jPanel32.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 530, 290));

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel18.setText("Total de venta:");

        lblTotalLav.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTotalLav.setText("TOTAL");

        jLabel109.setText("  $");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel18)
                .addGap(2, 2, 2)
                .addComponent(jLabel109)
                .addGap(4, 4, 4)
                .addComponent(lblTotalLav)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel109))
                    .addComponent(lblTotalLav))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        txtMR1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMR1FocusGained(evt);
            }
        });

        jLabel20.setText("Monto recibido:");

        jLabel21.setText("Cambio:");

        txtCMB1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCMB1FocusGained(evt);
            }
        });
        txtCMB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCMB1ActionPerformed(evt);
            }
        });

        btnGenerarLav.setText("Generar");
        btnGenerarLav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarLavActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMR1)
                            .addComponent(txtCMB1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(btnGenerarLav, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMR1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCMB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(btnGenerarLav)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlVenta1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(pnlVenta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        PanelServiciosEMP.addTab("Lavanderia", jPanel10);

        pu.addTab("Servicios", PanelServiciosEMP);

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        lblNombre.setText("Nombre");

        lblApPaterno.setText("Apellido Paterno");

        lblApMaterno.setText("Apellido Materno");

        cmbColonia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opción", "12 de Diciembre", "15 de Mayo", "18 de Agosto", "20 de Noviembre", "26 de Septiembre", "2 de Agosto", " 4 Milpas", " 5 de Febrero", " Acayapan", " Adolfo López Mateos", " Alaska", " Amado Nervo", " América Manríquez", " Ampliación El Paraíso", " Ampliación Santa Teresita", " Ampliación Tierra y Libertad", " Ampliación Unidad Obrera", " Aramara", " Arboledas", " Aves del Paraíso", " Aviación", " Aztlán El Verde", " Aztlán Solidaridad", " Benito Juárez", " Benito Juárez Oriente", " Bethel", " Bonaterra", " Brisas de San Juan", " Buenos Aires", " Bugambilias", " Burócrata Estatal", " Burócrata Federal", " Caja de Agua", " Caminera", " Camino Real", " Cantera del Nayar", " Cáp. Orozco", " Castilla", " Centro SCT Nayarit", " Chapultepec", " Ciudad del Valle", " Ciudad Industrial", " Ciudad Industrial Microindustria", " Colinas del Nayar", " Colinas del Rey", " Colonial", " Comerciantes", " Conasupo", " Cora", " Corralón", " Cuauhtémoc", " Cuitlahuac", " Del Bosque", " Del Sol", " Dieciséis de Septiembre", " Dr. Cuesta Barrios", " Dr. Lucas Vallarta", " Ecologistas", " Ejidal", " El 8", " El Aguacate", " El Armadillo", " El Capomo", " Electricistas", " El Faisán", " El Mirador INFONAVIT", " El Naranjal", " El Palomar", " El Paraíso", " El Parían", " El Pedregal", " El Puerto", " El Punto", " El Rodeo", " El Rubí", " El Tecolote", " El Tecolote INFONAVIT", " Emiliano Zapata", " Emilio M. González", " Estadios", " Esteban Baca Calderón", " Extamex", " Félix Peña", " Ferrocarrilero 1a Secc.", " Ferrocarrilero 2a Secc.", " Flamingos", " Florencia", " Flores Magón", " FOVISSSTE 1a Etapa", " FOVISSSTE 2a Etapa", " Francisco Villa", " Fray Junipero Serra", " Gardenias", " Genaro Vázquez", " Gilberto Flores Muñoz", " Gobernadores", " Gobierno del Cambio I", " Guadalupe", " Gustavo Díaz Ordaz", " Heriberto Casas", " Heriberto Jara", " Hermosa Provincia", " IMSS", " IMSS", " INDECO", " Independencia", " Ingeniero Agrónomo", " Ingeniero Aguayo", " Instituto Tecnológico de Tepic", " Insurgentes", " Islas del Paraíso", " Jacarandas", " Jagüey", " Jardines de La Cruz", " Jardines del Parque", " Jardines del Valle", " Jazmines", " Jesús García", " José María Martínez (El Molino)", " Juan Escutia", " Justino Ávila Arce", " Juventud", " Labores de Godínez", " Ladrilleras", " La Esperanza", " La Floresta", " Lagos del Country", " La Huerta", " La Joya", " La Loma", " La Lomita", " Las Aves", " Las Brisas", " Las Brisas FOVISSSTE", " Las Conchas", " Las Flores", " Las Islas", " Las Palomas", " Las Pares", " Lázaro Cárdenas", " Leonardo Rodríguez Alcaine", " Leyva Medina", " Lindavista", " Lirios", " Loma Hermosa", " Lomas Altas", " Lomas Bonitas", " Lomas de Cortez", " Lomas de La Cruz", " Lomas de La Cruz Sutse", " Lomas de La Laguna", " Lomas del Valle", " Lomas del Valle Ampliación", " Lomas de San Juan", " Los Arcos", " Los Colomos", " Los Fresnos", " Los Fresnos INFONAVIT", " Los Fresnos Oriente", " Los Fresnos Poniente", " Los Llanitos", " Los Pinos", " Los Sauces", " Los Sauces INFONAVIT", " Los Viveros", " Luis Donaldo Colosio", " Luis Donaldo Colosio Murrieta", " Luis Echeverría A.", " Magisterial", " Marco Antonio Fernández", " Menchaca", " México", " Miguel Ángel Paredes", " Miguel Hidalgo", " Miravalles", " Moctezuma", " Molinos del Rey", " Mololoa", " Morelos", " Nayarabastos", " Niños Héroes", " Nueva Alemania", " Nueva Aviación", " Nuevas Delicias", " Nuevas Palomas", " Nuevo Progreso", " Obrera CTM", " Ojo de Agua", " Olimpo", " Oriental", " Palacio de Gobierno del Estado de Nayarit", " Parque Ecológico", " Paseo de La Constitución", " Paseo del Valle Real", " Pedregal de San Juan", " Peñita", " Periodistas", " Plan de Ayala", " Predio San Martín", " Prieto Crispín", " Primero de Mayo", " Puente de San Cayetano", " Puerta de La Laguna", " Puerta Encanto", " Puesta del Sol", " Rancho las Cruces", " Real Montecarlo", " Reforma", " Residencial La Esmeralda", " Residencial La Loma", " Residencial los Olivos", " Revolución", " Rey Nayar", " Rinconada Residencial", " Rincón de San Juan", " Rivas Allende", " Riveras de La Laguna", " Rodeo de La Punta", " Ruinas de Jauja", " Sacristán", " San Antonio", " Sanchez Ibarra", " Sandino", " San José", " San Juan", " San Juanito", " Santa Cecilia", " Santa Fe", " Santa Teresita", " Secretaria de La Reforma Agraria", " Senderos del Monte", " Severiano Ocegueda", " Simancas", " Sindicalistas", " Social Progresivo Cuba", " Solidaridad INFONAVIT", " Solidaridad Primavera", " SPAUAN", " Tabacos Aztecas", " Tepic Centro", " Tierra y Libertad", " Tío Baltazar", " Tulipanes", " Unidad Deportiva Santa Teresita", " Unidad Obrera", " Unidos por Tu Tranquilidad", " Universidad Autónoma de Nayarit", " Universitario (AGEUAN)", " Valle de La Cruz", " Valle del Country", " Valle de Matatipac", " Valle de Nayarit", " Valle de Zaragoza", " Valle Dorado", " Valle Magno", " Valle Verde", " Valle Verde Conalep", " Venceremos", " Versalles Norte", " Versalles Sur", " Villa las Rosas", " Villa San Ángel", " Villas Arana", " Villas de La Cantera", " Villas de la Cruz", " Villas de la Laguna", " Villas de La Paz", " Villas del Molino", " Villas del Nayar", " Villas del Paraíso", " Villas del Parque", " Villas del Roble", " Villas de Matatipac", " Villas de San Juan", " Vistas de La Cantera", " Vistas de La Cantera Etapa 2", " Zapopan", " Zitacua" }));
        cmbColonia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbColoniaActionPerformed(evt);
            }
        });

        lblColonia.setText("Colonia");

        lblCalle.setText("Calle");

        lblNumero.setText("Número");

        lblTelefono.setText("Teléfono");

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEliminar3.setText("Eliminar");
        btnEliminar3.setEnabled(false);
        btnEliminar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar3ActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.setEnabled(false);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Telefono", "Direccion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClienteMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tblCliente);

        jSeparator9.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                                        .addComponent(lblNombre)
                                        .addGap(18, 18, 18))
                                    .addGroup(jPanel16Layout.createSequentialGroup()
                                        .addComponent(lblColonia)
                                        .addGap(17, 17, 17)))
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbColonia, 0, 1, Short.MAX_VALUE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel16Layout.createSequentialGroup()
                                        .addComponent(lblApPaterno)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtApPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblApMaterno)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtApMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel16Layout.createSequentialGroup()
                                        .addComponent(lblCalle)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblNumero)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblTelefono)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 888, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(471, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblApPaterno)
                    .addComponent(txtApPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblApMaterno)
                    .addComponent(txtApMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblColonia)
                    .addComponent(lblCalle)
                    .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumero)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbColonia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelefono)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrar)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar3)
                    .addComponent(btnNuevo))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pu.addTab("Clientes", jPanel16);

        jMenuBar1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jMenuBar1FocusGained(evt);
            }
        });

        jMenu1.setText("Sesion");

        ConfCuenta.setText("Configuracion de cuenta");
        ConfCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfCuentaActionPerformed(evt);
            }
        });
        jMenu1.add(ConfCuenta);

        CambioSesion.setText("Cambio de sesion");
        CambioSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambioSesionActionPerformed(evt);
            }
        });
        jMenu1.add(CambioSesion);

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        jMenu1.add(Salir);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pu, javax.swing.GroupLayout.PREFERRED_SIZE, 1409, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pu)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void conectar() throws SQLException{
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
        }catch(ClassNotFoundException e){
            e.printStackTrace();
        }
    }
    
    public int NuevoFolio(){
        String sql=""; int folio=-1;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://" + this.servidor + ";databaseName=burbuja2";
            cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            Statement sentenciaD = cn.createStatement();
            sql = "SELECT MAX(folio) FROM venta";
            ResultSet rs = sentenciaD.executeQuery(sql);
            while (rs.next()) {
                folio = rs.getInt(1)+1;
            }
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
        return folio;
    }
    
    private ResultSet consultaV(String sql, Statement s) throws SQLException{
        ResultSet rs=null;
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            s = cn.createStatement();
            rs = s.executeQuery(sql);
        }catch (SQLException e){
        } catch (ClassNotFoundException e) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, e);
        }
        return rs;
    }
    
    private void conectarD() throws SQLException{
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            java.sql.Connection cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            sentenciaD = cn.createStatement();
        }catch(ClassNotFoundException e){
        }
    }
    
    private ResultSet consulta(String sql){
        ResultSet rs=null;
        try{
            rs = sentencia.executeQuery(sql);
        }catch (SQLException e){
            e.printStackTrace();
        }
        return rs;
    }
    
    public void listServTin(){
        cmbServicioTintoreria.removeAllItems();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            Statement sentenciaD = cn.createStatement();
            String sql="SELECT tipo_servicio FROM servicio where servicio='Tintoreria'";
            ResultSet rs = sentenciaD.executeQuery(sql);
            while (rs.next()) {
               cmbServicioTintoreria.addItem(rs.getString("tipo_servicio"));   
            }
        }catch (ClassNotFoundException | SQLException e)
        {
            e.printStackTrace();
        }     
}
    
    public void listServLav(){
    cmbServicioLav.removeAllItems();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            Statement sentenciaD = cn.createStatement();
            String sql="SELECT tipo_servicio FROM servicio where servicio='Lavanderia'";
            ResultSet rs = sentenciaD.executeQuery(sql);
            while (rs.next()) {
               cmbServicioLav.addItem(rs.getString("tipo_servicio"));   
            }
        }catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }     
    } 
    
    //Se añaden los clientes al jcomboBox de lavanderia
    public void listCL(){
        cmbClientesLav.removeAllItems();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
                cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            Statement sentenciaD = cn.createStatement();
            String sql="SELECT nombre_cliente FROM cliente";
            ResultSet rs = sentenciaD.executeQuery(sql);
            while (rs.next()) {
                cmbClientesLav.addItem(rs.getString("nombre_cliente"));   
            }
        }catch (ClassNotFoundException | SQLException e){
            e.printStackTrace();
        } 
}

    //Se añaden los clientes al jcomboBox de tintoreria
    public void listCT(){
        cmbClientesTint.removeAllItems();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            java.sql.Connection cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            Statement sentenciaD = cn.createStatement();
            String sql="SELECT nombre_cliente FROM cliente";
            ResultSet rs = sentenciaD.executeQuery(sql);
            while (rs.next()) {
               cmbClientesTint.addItem(rs.getString("nombre_cliente"));   
            }
        }catch (ClassNotFoundException | SQLException e){
            e.printStackTrace();
        } 
    }
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated
       
    private void ConfCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfCuentaActionPerformed
        new ActualizarContraseña().setVisible(true);
    }//GEN-LAST:event_ConfCuentaActionPerformed

    private void CambioSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambioSesionActionPerformed
        new VentanaPRINCIPAL().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_CambioSesionActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_SalirActionPerformed

    private void puMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_puMouseClicked

    }//GEN-LAST:event_puMouseClicked

    private void puFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_puFocusGained
        switch(pu.getSelectedIndex()){
            case 0:
                lblHora.setText(Calendar.HOUR_OF_DAY+":"+Calendar.MINUTE);
                break;
        }
    }//GEN-LAST:event_puFocusGained

    private void tblClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClienteMouseClicked
        nfs = tblCliente.getSelectedRow();
        btnEliminar3.setEnabled(true);
        btnActualizar.setEnabled(true);
        txtTelefono.setText(tblCliente.getValueAt(nfs, 1)+"");
        String s = tblCliente.getValueAt(nfs, 0).toString();
        this.nom = s;
        String[] S = s.split(" ");
        txtNombre.setText(S[0]+"");
        txtApPaterno.setText(S[1]+"");
        txtApMaterno.setText(S[2]+"");
        String p = tblCliente.getValueAt(nfs, 2).toString();
        String[] P = p.split(",");
        txtCalle.setText(P[0]+"");
        txtNumero.setText(P[1].substring(1));
        cmbColonia.setSelectedItem(P[2].substring(1));
    }//GEN-LAST:event_tblClienteMouseClicked

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        try {
            String nom = txtNombre.getText() + " " +txtApPaterno.getText() + " " +txtApMaterno.getText();
            String tel = txtTelefono.getText();
            String dir = txtCalle.getText() + ", " + txtNumero.getText() + ", " + cmbColonia.getSelectedItem();
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            java.sql.Connection cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            Statement sentencia = cn.createStatement();
            String sql = "INSERT INTO cliente VALUES ('"+nom+"', '"+tel+"', '"+dir+"');";
            sentencia.executeUpdate(sql);
            listarC();
            limpiarC();
        }catch (SQLException e){
            e.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tblCliente.getModel();
        modelo.setRowCount(0);
        int filaseleccionada;
        filaseleccionada= tblCliente.getSelectedRow();
        try {
            Class<?> forName = Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            java.sql.Connection cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            Statement sentencia = cn.createStatement();
            String nombre =(String)modelo.getValueAt(filaseleccionada, 0);
            String tel = txtTelefono.getText();
            String n=(String)modelo.getValueAt(filaseleccionada, 1);
            String dir = txtCalle.getText() + ", " + txtNumero.getText() + ", " + cmbColonia.getSelectedItem();
            sentencia.execute("update cliente set nombre_cliente='"+nombre+"', telefono_cliente = '"+tel
                +"', direccion_cliente = '"+dir+"' WHERE nombre_cliente ='"+this.nom+"';");
            listarC();
            limpiarC();
            btnActualizar.setEnabled(false);
            btnEliminar3.setEnabled(false);
        }catch (SQLException e){
            e.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar3ActionPerformed
        try{
            String nom = txtNombre.getText() +" " + txtApPaterno.getText() + " " + txtApMaterno.getText();
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            java.sql.Connection cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            Statement sentencia = cn.createStatement();
            String sql = "DELETE from cliente where nombre_cliente='"+this.nom+"';";
            sentencia.execute(sql);
            listarC();
            limpiarC();
            btnActualizar.setEnabled(false);
            btnEliminar3.setEnabled(false);
        }catch (ClassNotFoundException e){
            e.printStackTrace();
        }
        catch (SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnEliminar3ActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiarC();
        btnActualizar.setEnabled(false);
        btnEliminar3.setEnabled(false);
        txtNombre.requestFocus();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void cmbColoniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbColoniaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbColoniaActionPerformed

    private void PanelServiciosEMPFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PanelServiciosEMPFocusGained
        listCL();
        listCT();
        ttotal = 0;
    }//GEN-LAST:event_PanelServiciosEMPFocusGained

    private void tblVentaLavMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVentaLavMouseEntered

    }//GEN-LAST:event_tblVentaLavMouseEntered

    private void tblVentaLavMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVentaLavMouseClicked
        nfs = tblVentaLav.getSelectedRow();
        DefaultTableModel m = (DefaultTableModel) tblVentaLav.getModel();
        cmbServicioLav.setSelectedItem(m.getValueAt(nfs, 0));
        txtCantLavanderia.setText(m.getValueAt(nfs, 1).toString());
        txtaDescripcionLavanderia.setText(m.getValueAt(nfs, 3).toString());
        btnActualizarLav.setEnabled(true);
        btnEliminarLav.setEnabled(true);
        btnAñadirLav.setEnabled(false);
    }//GEN-LAST:event_tblVentaLavMouseClicked

    private void btnCancelarVentaLavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarVentaLavActionPerformed
        DefaultTableModel m = (DefaultTableModel) tblVentaLav.getModel();
        lblTotalLav.setText(ttotal + "");
        lblFolioLav.setText(NuevoFolio()+"");
        cmbServicioLav.setSelectedIndex(0);
        txtCantLavanderia.setText("");
        txtaDescripcionLavanderia.setText("");
        precio = 0;
        ttotal = 0;
        lblTotalLav.setText("0.0");
        btnActualizarLav.setEnabled(false);
        btnEliminarLav.setEnabled(false);
        m.setRowCount(0);
    }//GEN-LAST:event_btnCancelarVentaLavActionPerformed

    private void btnGenerarLavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarLavActionPerformed
        try {
            // Se genera la insercion a la tabla de Ventas de la BD BURBUJA
            conectarD();
        } catch (SQLException ex) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        int dia1 = jcalFechaEntregaLav.getCalendar().get(Calendar.DAY_OF_MONTH);
        int mes2 = jcalFechaEntregaLav.getCalendar().get(Calendar.MONTH) + 1;
        int year3 = jcalFechaEntregaLav.getCalendar().get(Calendar.YEAR);
        String fecha_entrega = "";
        if (mes > 0 && mes < 10) {
            fecha_entrega = year3 + "-0" + mes2 + "-" + dia1;
        } else if (mes > 9 && mes < 13) {
            fecha_entrega = year3 + "-" + mes2 + "-" + dia1;
        }
        DefaultTableModel m = (DefaultTableModel) tblVentaLav.getModel();
        int f = tblVentaLav.getRowCount();//obtiene cantidad de filas
        int id_client = 0;
        String fecha = fecha_a.toString();
        int id_serv = 0;
        String usuario = lblEmpleadoLav.getText();
        int id_us = 0;
        String cliente = cmbClientesLav.getSelectedItem().toString();
        try {
            ResultSet rs1 = sentenciaD.executeQuery("SELECT id_usuario FROM usuario WHERE nombre_usuario ='" + usuario + "';");
            while (rs1.next()) {
                id_us = rs1.getInt(1);//sacamos el id del resultado de la consulta
            }
            ResultSet rs2 = sentenciaD.executeQuery("SELECT id_cliente FROM cliente WHERE nombre_cliente ='" + cliente + "';");
            while (rs2.next()) {
                id_client = rs2.getInt(1);//sacamos el id del resultado de la consulta
            }
            float cant = 0;
            String des = "";
            for (int i = 0; i < f; i++) {//ciclo para recorrer las filas
                try {
                    cant = Float.parseFloat(m.getValueAt(i, 1).toString());//sacamos la cantidad de la tabla
                    des = m.getValueAt(i, 3).toString();
                    conectarD();
                    String s = m.getValueAt(i, 0).toString();//obtenemos el servicio de la tabla
                    ResultSet rs = sentenciaD.executeQuery("SELECT id_servicio, precio FROM servicio WHERE tipo_servicio ='" + s + "';");
                    while (rs.next()) {
                        id_serv = rs.getInt(1);//sacamos el id del resultado de la consulta
                        sub[i] = rs.getFloat(2) * cant;
                    }
                    int folio = Integer.parseInt(lblFolioLav.getText());
                    sentenciaD.executeUpdate("INSERT INTO venta (id_servicio, cantidad, total_venta, descripcion,fecha,fecha_entrega,"
                        + "id_usuario,id_cliente, folio) VALUES(" + id_serv + "," + cant + "," + sub[i] + ",'" + des + "',"
                        + "'" + fecha + "','" + fecha_entrega + "'," + id_us + "," + id_client + "," + folio + ")");
                } catch (SQLException ex) {
                    Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        lblFolioTint.setText(NuevoFolio()+"");
        lblFolioLav.setText(NuevoFolio()+"");
        cmbServicioLav.setSelectedIndex(0);
        txtCantLavanderia.setText("");
        txtaDescripcionLavanderia.setText("");
        precio = 0;
        ttotal = 0;
        lblTotalLav.setText("0.0");
        btnActualizarLav.setEnabled(false);
        btnEliminarLav.setEnabled(false);
        m.setRowCount(0);
        txtMR1.setText("");
        txtCMB1.setText("");
    }//GEN-LAST:event_btnGenerarLavActionPerformed

    private void btnEliminarLavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarLavActionPerformed
        btnAñadirLav.setEnabled(true);
        DefaultTableModel m = (DefaultTableModel) tblVentaLav.getModel();
        float sub = Float.parseFloat(m.getValueAt(nfs, 2).toString());
        ttotal = ttotal-sub;
        m.removeRow(nfs);
        cmbServicioLav.setSelectedIndex(0);
        txtCantLavanderia.setText("");
        txtaDescripcionLavanderia.setText("");
        btnActualizarLav.setEnabled(false);
        btnEliminarLav.setEnabled(false);
        lblTotalLav.setText(ttotal + "");
    }//GEN-LAST:event_btnEliminarLavActionPerformed

    private void btnActualizarLavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarLavActionPerformed
        //subtotal
        btnAñadirLav.setEnabled(true);
        Object osub = tblVentaLav.getValueAt(nfs, 2);
        String stot = String.valueOf(osub);
        float toTemp = Float.parseFloat(stot);

        //quitar lo que tenia
        ttotal = ttotal - toTemp;

        int id = 0;
        float cant = Float.parseFloat(txtCantLavanderia.getText());
        int desc = 0;
        try {
            conectarD();
            DefaultTableModel m = (DefaultTableModel) tblVentaLav.getModel();
            String servicio = cmbServicioLav.getSelectedItem().toString();//obtenemos el servicio de tintoreria
            ResultSet rs1 = sentenciaD.executeQuery("SELECT id_promo FROM servicio WHERE tipo_servicio='" + servicio + "';");
            while (rs1.next()) {
                id = rs1.getInt(1);
            }
            ResultSet rs2 = sentenciaD.executeQuery("SELECT descuento FROM promocion WHERE id_promocion=" + id + ";");
            while (rs2.next()) {
                desc = rs2.getInt(1);
            }
            ResultSet rs = sentenciaD.executeQuery("SELECT precio FROM servicio WHERE tipo_servicio='" + servicio + "';");//consultamos el precio del servicio
            while (rs.next()) {
                precio = rs.getFloat(1) * cant * desc / 100;
            }
            ttotal += precio;
            m.setValueAt(servicio, nfs, 0);
            m.setValueAt(cant, nfs, 1);
            m.setValueAt(precio, nfs, 2);
            m.setValueAt(txtaDescripcionLavanderia.getText(), nfs, 3);
        } catch (SQLException ex) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        lblTotalLav.setText(ttotal + "");
        btnActualizarLav.setEnabled(false);
        btnEliminarLav.setEnabled(false);
    }//GEN-LAST:event_btnActualizarLavActionPerformed

    private void btnAñadirLavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirLavActionPerformed
        int id = 0;
        float cant = Float.parseFloat(txtCantLavanderia.getText());
        int desc = 0;
        try {
            conectarD();
            DefaultTableModel m = (DefaultTableModel) tblVentaLav.getModel();
            String servicio = cmbServicioLav.getSelectedItem().toString();//obtenemos el servicio de tintoreria
            ResultSet rs1 = sentenciaD.executeQuery("SELECT id_promo FROM servicio WHERE tipo_servicio='" + servicio + "';");
            while (rs1.next()) {
                id = rs1.getInt(1);
            }
            ResultSet rs2 = sentenciaD.executeQuery("SELECT descuento FROM promocion WHERE id_promocion=" + id + ";");
            while (rs2.next()) {
                desc = rs2.getInt(1);
            }
            ResultSet rs = sentenciaD.executeQuery("SELECT precio FROM servicio WHERE tipo_servicio='" + servicio + "';");//consultamos el precio del servicio
            while (rs.next()) {
                precio = rs.getFloat(1) * cant * desc / 100;
            }
            ttotal += precio;
            Object[] fila = {servicio, cant, precio, txtaDescripcionLavanderia.getText()};
            m.addRow(fila);
        } catch (SQLException ex) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        lblTotalLav.setText(ttotal + "");
    }//GEN-LAST:event_btnAñadirLavActionPerformed

    private void btnAñadirLavMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAñadirLavMouseClicked

    }//GEN-LAST:event_btnAñadirLavMouseClicked

    private void cmbClientesLavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClientesLavActionPerformed
        if (cmbClientesLav.getSelectedItem() != null) {
            String nomcl = cmbClientesLav.getSelectedItem().toString();
            String sql = "SELECT telefono_cliente, direccion_cliente FROM cliente WHERE nombre_cliente = '" + nomcl + "';";
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String conecctionUrl = "jdbc:sqlserver://" + this.servidor + ";databaseName=burbuja2";
                Connection cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
                Statement sentencia = cn.createStatement();
                ResultSet rs = sentencia.executeQuery(sql);
                while (rs.next()) {
                    lblTelClLav.setText(rs.getString("telefono_cliente"));
                    lblDirClLav.setText(rs.getString("direccion_cliente"));
                }
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_cmbClientesLavActionPerformed

    private void tblVentaTintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVentaTintMouseClicked
        btnAñadirLav.setEnabled(false);
        nfs = tblVentaTint.getSelectedRow();
        DefaultTableModel m = (DefaultTableModel) tblVentaTint.getModel();
        cmbServicioTintoreria.setSelectedItem(m.getValueAt(nfs, 0));
        txtCantTintoreria.setText(m.getValueAt(nfs, 1).toString());
        txtaDescripcionTintoreria.setText(m.getValueAt(nfs, 3).toString());
        btnActualizarTint.setEnabled(true);
        btnEliminarTint.setEnabled(true);
    }//GEN-LAST:event_tblVentaTintMouseClicked

    private void btnCancelarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarVentaActionPerformed
        DefaultTableModel m = (DefaultTableModel) tblVentaTint.getModel();
        lblTotalTint.setText(ttotal + "");
        lblFolioTint.setText(NuevoFolio()+"");
        cmbServicioTintoreria.setSelectedIndex(0);
        txtCantTintoreria.setText("");
        txtaDescripcionTintoreria.setText("");
        precio = 0;
        ttotal = 0;
        lblTotalTint.setText("0.0");
        btnActualizarTint.setEnabled(false);
        btnEliminarTint.setEnabled(false);
        m.setRowCount(0);
    }//GEN-LAST:event_btnCancelarVentaActionPerformed

    private void btnGenerarTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarTinActionPerformed
        try {
            // Se genera la insercion a la tabla de Ventas de la BD BURBUJA
            conectarD();
        } catch (SQLException ex) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        int dia1 = jcalFechaEntregaTint.getCalendar().get(Calendar.DAY_OF_MONTH);
        int mes2 = jcalFechaEntregaTint.getCalendar().get(Calendar.MONTH) + 1;
        int year3 = jcalFechaEntregaTint.getCalendar().get(Calendar.YEAR);
        String fecha_entrega = "";
        if (mes > 0 && mes < 10) {
            fecha_entrega = year3 + "-0" + mes2 + "-" + dia1;
        } else if (mes > 9 && mes < 13) {
            fecha_entrega = year3 + "-" + mes2 + "-" + dia1;
        }
        DefaultTableModel m = (DefaultTableModel) tblVentaTint.getModel();
        int f = tblVentaTint.getRowCount();//obtiene cantidad de filas
        int id_client = 0;
        String fecha = fecha_a.toString();
        int id_serv = 0;
        String usuario = lblEmpleadoTint.getText();
        int id_us = 0;
        String cliente = cmbClientesTint.getSelectedItem().toString();
        try {
            ResultSet rs1 = sentenciaD.executeQuery("SELECT id_usuario FROM usuario WHERE nombre_usuario ='" + usuario + "';");
            while (rs1.next()) {
                id_us = rs1.getInt(1);//sacamos el id del resultado de la consulta
            }
            ResultSet rs2 = sentenciaD.executeQuery("SELECT id_cliente FROM cliente WHERE nombre_cliente ='" + cliente + "';");
            while (rs2.next()) {
                id_client = rs2.getInt(1);//sacamos el id del resultado de la consulta
            }
            float cant = 0;
            String des = "";
            for (int i = 0; i < f; i++) {//ciclo para recorrer las filas
                try {
                    cant = Float.parseFloat(m.getValueAt(i, 1).toString());//sacamos la cantidad de la tabla
                    des = m.getValueAt(i, 3).toString();
                    conectarD();
                    String s = m.getValueAt(i, 0).toString();//obtenemos el servicio de la tabla
                    ResultSet rs = sentenciaD.executeQuery("SELECT id_servicio, precio FROM servicio WHERE tipo_servicio ='" + s + "';");
                    while (rs.next()) {
                        id_serv = rs.getInt(1);//sacamos el id del resultado de la consulta
                        sub[i] = rs.getFloat(2) * cant;
                    }
                    int folio = Integer.parseInt(lblFolioTint.getText());
                    sentenciaD.executeUpdate("INSERT INTO venta (id_servicio, cantidad, total_venta, descripcion,fecha,fecha_entrega,"
                        + "id_usuario,id_cliente, folio) VALUES(" + id_serv + "," + cant + "," + sub[i] + ",'" + des + "',"
                        + "'" + fecha + "','" + fecha_entrega + "'," + id_us + "," + id_client + "," + folio + ")");
                } catch (SQLException ex) {
                    Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        lblFolioTint.setText(NuevoFolio()+"");
        lblFolioLav.setText(NuevoFolio()+"");
        cmbServicioTintoreria.setSelectedIndex(0);
        txtCantTintoreria.setText("");
        txtaDescripcionTintoreria.setText("");
        precio = 0;
        t1=ttotal;
        ttotal = 0;
        lblTotalTint.setText("0.0");
        btnActualizarTint.setEnabled(false);
        btnEliminarTint.setEnabled(false);
        m.setRowCount(0);
        txtMR.setText("");
        txtCMB.setText("");
    }//GEN-LAST:event_btnGenerarTinActionPerformed

    private void btnEliminarTintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarTintActionPerformed
        btnAñadirTint.setEnabled(true);
        DefaultTableModel m = (DefaultTableModel) tblVentaTint.getModel();
        float sub = Float.parseFloat(m.getValueAt(nfs, 2).toString());
        ttotal = ttotal-sub;
        m.removeRow(nfs);
        cmbServicioTintoreria.setSelectedIndex(0);
        txtCantTintoreria.setText("");
        txtaDescripcionTintoreria.setText("");
        btnActualizarTint.setEnabled(false);
        btnEliminarTint.setEnabled(false);
        lblTotalTint.setText(ttotal + "");
    }//GEN-LAST:event_btnEliminarTintActionPerformed

    private void btnActualizarTintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarTintActionPerformed
        btnAñadirTint.setEnabled(true);
        //subtotal
        Object osub = tblVentaTint.getValueAt(nfs, 2);
        String stot = String.valueOf(osub);
        float toTemp = Float.parseFloat(stot);

        //quitar lo que tenia
        ttotal = ttotal - toTemp;

        int id = 0;
        float cant = Float.parseFloat(txtCantTintoreria.getText());
        int desc = 0;
        try {
            conectarD();
            DefaultTableModel m = (DefaultTableModel) tblVentaTint.getModel();
            String servicio = cmbServicioTintoreria.getSelectedItem().toString();//obtenemos el servicio de tintoreria
            ResultSet rs1 = sentenciaD.executeQuery("SELECT id_promo FROM servicio WHERE tipo_servicio='" + servicio + "';");
            while (rs1.next()) {
                id = rs1.getInt(1);
            }
            ResultSet rs2 = sentenciaD.executeQuery("SELECT descuento FROM promocion WHERE id_promocion=" + id + ";");
            while (rs2.next()) {
                desc = rs2.getInt(1);
            }
            ResultSet rs = sentenciaD.executeQuery("SELECT precio FROM servicio WHERE tipo_servicio='" + servicio + "';");//consultamos el precio del servicio
            while (rs.next()) {
                precio = rs.getFloat(1) * cant * desc / 100;
            }
            ttotal += precio;
            m.setValueAt(servicio, nfs, 0);
            m.setValueAt(cant, nfs, 1);
            m.setValueAt(precio, nfs, 2);
            m.setValueAt(txtaDescripcionTintoreria.getText(), nfs, 3);
        } catch (SQLException ex) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        lblTotalTint.setText(ttotal + "");
        btnActualizarTint.setEnabled(false);
        btnEliminarTint.setEnabled(false);
    }//GEN-LAST:event_btnActualizarTintActionPerformed

    private void btnAñadirTintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirTintActionPerformed
        int id = 0;
        float cant = Float.parseFloat(txtCantTintoreria.getText());
        int desc = 0;
        try {
            conectarD();
            DefaultTableModel m = (DefaultTableModel) tblVentaTint.getModel();
            String servicio = cmbServicioTintoreria.getSelectedItem().toString();//obtenemos el servicio de tintoreria
            ResultSet rs1 = sentenciaD.executeQuery("SELECT id_promo FROM servicio WHERE tipo_servicio='" + servicio + "';");
            while (rs1.next()) {
                id = rs1.getInt(1);
            }
            ResultSet rs2 = sentenciaD.executeQuery("SELECT descuento FROM promocion WHERE id_promocion=" + id + ";");
            while (rs2.next()) {
                desc = rs2.getInt(1);
            }
            ResultSet rs = sentenciaD.executeQuery("SELECT precio FROM servicio WHERE tipo_servicio='" + servicio + "';");//consultamos el precio del servicio
            while (rs.next()) {
                precio = rs.getFloat(1) * cant * desc / 100;
            }
            ttotal += precio;
            Object[] fila = {servicio, cant, precio, txtaDescripcionTintoreria.getText()};
            m.addRow(fila);
        } catch (SQLException ex) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        lblTotalTint.setText(ttotal + "");
    }//GEN-LAST:event_btnAñadirTintActionPerformed

    private void btnAñadirTintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAñadirTintMouseClicked
        //        System.out.println(jcalFechaEntregaTint.getDate().toString());
        //        validarCampos(jcalFechaEntregaTint.getDate().toString());
    }//GEN-LAST:event_btnAñadirTintMouseClicked

    private void btnAñadirTintMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAñadirTintMouseMoved

    }//GEN-LAST:event_btnAñadirTintMouseMoved

    private void cmbClientesTintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClientesTintActionPerformed
        if (cmbClientesTint.getSelectedItem() != null) {
            String nomcl = cmbClientesTint.getSelectedItem().toString();
            String sql = "SELECT telefono_cliente, direccion_cliente FROM cliente WHERE nombre_cliente = '" + nomcl + "';";
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String conecctionUrl = "jdbc:sqlserver://" + this.servidor + ";databaseName=burbuja2";
                Connection cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
                Statement sentencia = cn.createStatement();
                ResultSet rs = sentencia.executeQuery(sql);
                while (rs.next()) {
                    lblTelClTint.setText(rs.getString("telefono_cliente"));
                    lblDirClTint.setText(rs.getString("direccion_cliente"));
                }
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_cmbClientesTintActionPerformed

    private void cmbClientesTintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbClientesTintMouseClicked

    }//GEN-LAST:event_cmbClientesTintMouseClicked

    private void txtMR1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMR1FocusGained

    }//GEN-LAST:event_txtMR1FocusGained

    private void txtCMB1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCMB1FocusGained
        float total=Float.parseFloat(lblTotalLav.getText());
        cambio=0;
        mr= Float.parseFloat(txtMR1.getText());
        cambio=(mr-total);
        txtCMB1.setText(cambio+"");
    }//GEN-LAST:event_txtCMB1FocusGained

    private void txtCMB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCMB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCMB1ActionPerformed

    private void txtMRFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMRFocusGained

    }//GEN-LAST:event_txtMRFocusGained

    private void txtCMBFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCMBFocusGained
        float total=Float.parseFloat(lblTotalTint.getText());
        cambio=0;
        mr= Float.parseFloat(txtMR.getText());
        cambio=(mr-total);
        txtCMB.setText(cambio+"");
    }//GEN-LAST:event_txtCMBFocusGained

    private void txtCMBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCMBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCMBActionPerformed

    private void jMenuBar1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jMenuBar1FocusGained
      listarC();
    }//GEN-LAST:event_jMenuBar1FocusGained
    public void insertarCorte()
    {
        
            try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+servidor+":1433;databaseName=burbuja2";
            Connection cn = DriverManager.getConnection(conecctionUrl,usuario,contra);
            Statement sentencia = cn.createStatement();
            String fecha=fecha_a;
            sentencia.executeUpdate("INSERT INTO corte_caja VALUES("+corte+",'"+fecha+"')"); //guarda datos
            showMessageDialog(null,"Se ha registrado nuevo servicio");
           
        }catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }
        listarCorte();
    }
    public void listarCorte()
    {   DefaultTableModel m1=(DefaultTableModel)VentanaCC.tablaCorte.getModel();
        String sql="SELECT corte_caja,fecha_corte FROM corte_caja";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            Connection cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            Statement sentencia = cn.createStatement();
            ResultSet rs = sentencia.executeQuery(sql);
            m1.setRowCount(0);
            while (rs.next()) {
                Object []fila={rs.getString(1),rs.getString(2)};
                m1.addRow(fila);
            }
        }catch (ClassNotFoundException | SQLException e)
        {
            e.printStackTrace();
        } 
    }
    private void limpiarC(){
        txtNombre.setText("");
        txtApPaterno.setText("");
        txtApMaterno.setText("");
        txtCalle.setText("");
        txtNumero.setText("");
        txtTelefono.setText("");
        cmbColonia.setSelectedIndex(0);
    }
    
    private void listarC(){
        String sql="SELECT * FROM cliente";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            Connection cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            Statement sentencia = cn.createStatement();
            ResultSet rs = sentencia.executeQuery(sql);
            DefaultTableModel m1=(DefaultTableModel)tblCliente.getModel();
            m1.setRowCount(0);
            while (rs.next()) {
                Object []fila={rs.getString(2),rs.getString(3),rs.getString(4)};
                m1.addRow(fila);
            }
        }catch (ClassNotFoundException | SQLException e)
        {
            e.printStackTrace();
        }
    }

    
    /**
     * @param args the command line arguments
     */
       public static void main(String args[]) {

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                try {
                    new MenuAdmin().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CambioSesion;
    private javax.swing.JMenuItem ConfCuenta;
    public static javax.swing.JTabbedPane PanelServiciosEMP;
    private javax.swing.JMenuItem Salir;
    public static javax.swing.JLabel Tipo_us;
    public static javax.swing.JLabel Tipo_us1;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnActualizarLav;
    private javax.swing.JButton btnActualizarTint;
    private javax.swing.JButton btnAñadirLav;
    private javax.swing.JButton btnAñadirTint;
    private javax.swing.JButton btnCancelarVenta;
    private javax.swing.JButton btnCancelarVentaLav;
    private javax.swing.JButton btnEliminar3;
    private javax.swing.JButton btnEliminarLav;
    private javax.swing.JButton btnEliminarTint;
    private javax.swing.JButton btnGenerarLav;
    private javax.swing.JButton btnGenerarTin;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JComboBox<String> cmbClientesLav;
    private javax.swing.JComboBox<String> cmbClientesTint;
    private javax.swing.JComboBox<String> cmbColonia;
    private javax.swing.JComboBox<String> cmbServicioLav;
    private javax.swing.JComboBox<String> cmbServicioTintoreria;
    private javax.swing.JLabel fechaActualLav;
    private javax.swing.JLabel fechaActualTint;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane8;
    private com.toedter.calendar.JDateChooser jcalFechaEntregaLav;
    private com.toedter.calendar.JDateChooser jcalFechaEntregaTint;
    private javax.swing.JLabel lblApMaterno;
    private javax.swing.JLabel lblApPaterno;
    private javax.swing.JLabel lblCalle;
    private javax.swing.JLabel lblCantTintoreria;
    private javax.swing.JLabel lblCantTintoreria1;
    private javax.swing.JLabel lblColonia;
    private javax.swing.JLabel lblDesTintoreria;
    private javax.swing.JLabel lblDesTintoreria1;
    private javax.swing.JLabel lblDirClLav;
    private javax.swing.JLabel lblDirClTint;
    public static javax.swing.JLabel lblEmpleadoLav;
    public static javax.swing.JLabel lblEmpleadoTint;
    private javax.swing.JLabel lblFolio;
    private javax.swing.JLabel lblFolio1;
    public static javax.swing.JLabel lblFolioLav;
    public static javax.swing.JLabel lblFolioTint;
    private javax.swing.JLabel lblHORALAV;
    private javax.swing.JLabel lblHora;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblTelClLav;
    private javax.swing.JLabel lblTelClTint;
    private javax.swing.JLabel lblTelefono;
    public static javax.swing.JLabel lblTotalLav;
    public static javax.swing.JLabel lblTotalTint;
    private javax.swing.JPanel pnlVenta;
    private javax.swing.JPanel pnlVenta1;
    public static javax.swing.JTabbedPane pu;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTable tblVentaLav;
    private javax.swing.JTable tblVentaTint;
    private javax.swing.JTextField txtApMaterno;
    private javax.swing.JTextField txtApPaterno;
    private javax.swing.JTextField txtCMB;
    private javax.swing.JTextField txtCMB1;
    private javax.swing.JTextField txtCalle;
    private javax.swing.JTextField txtCantLavanderia;
    private javax.swing.JTextField txtCantTintoreria;
    private javax.swing.JTextField txtMR;
    private javax.swing.JTextField txtMR1;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextArea txtaDescripcionLavanderia;
    private javax.swing.JTextArea txtaDescripcionTintoreria;
    // End of variables declaration//GEN-END:variables


}
