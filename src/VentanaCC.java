
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Diana
 */
public class VentanaCC extends javax.swing.JFrame {
     java.sql.Connection cn;
  Statement s;
String servidor="localhost", usuario="sa", contra="123";
Statement sentenciaD;
Statement sentencia;
 Object [] fila=new Object[0];
     Calendar fecha = new GregorianCalendar();
        int año = fecha.get(Calendar.YEAR);
        int mes = fecha.get(Calendar.MONTH)+1;
        int dia = fecha.get(Calendar.DAY_OF_MONTH);
        String fecha_actual=año+"/"+mes+"/"+dia;
        String fecha_a =año+"-0"+mes+"-"+dia;
    /**
     * Creates new form VentanaCC
     */
    public VentanaCC() {
        initComponents();
  
    }
       private void conectarD() throws SQLException{
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
            java.sql.Connection cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
            sentenciaD = cn.createStatement();
        }catch(ClassNotFoundException e){
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCorte = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        UF = new javax.swing.JRadioButton();
        P = new javax.swing.JRadioButton();
        fecha2 = new com.toedter.calendar.JDateChooser();
        lblAFecha = new javax.swing.JLabel();
        fecha1 = new com.toedter.calendar.JDateChooser();
        lblFecha = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        tablaCorte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "             Dia de corte", "                  Corte"
            }
        ));
        tablaCorte.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tablaCorte);

        jLabel1.setText("Corte de Caja");

        UF.setText("Una sola fecha");

        P.setText("Periodo");

        lblAFecha.setText("a");

        lblFecha.setText("Fecha:");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cortes existentes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblFecha)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblAFecha))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(UF)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fecha2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(P)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UF)
                    .addComponent(P))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblAFecha)
                        .addComponent(lblFecha, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(29, 29, 29))
        );

        jButton3.setText("Regresar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       DefaultTableModel m1=(DefaultTableModel)tablaCorte.getModel();
        String sql="SELECT corte_caja,fecha_corte FROM corte_caja";
        try {
         Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
        cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
        s = cn.createStatement();
            ResultSet rs = sentencia.executeQuery(sql);
            m1.setRowCount(0);
            while (rs.next()) {
                Object []fila={rs.getString(1),rs.getString(2)};
                m1.addRow(fila);
            }
        }catch (ClassNotFoundException | SQLException e)
        {
            e.printStackTrace();
        } 
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int dia1 = (fecha1.getCalendar().get(Calendar.DAY_OF_MONTH));
        int mes1 =(fecha1.getCalendar().get(Calendar.MONTH) + 1);
        int year1 =(fecha1.getCalendar().get(Calendar.YEAR));
        String f1;
        if(mes1<10){
            f1 =(year1 + "-0" + mes1+ "-" + dia1);
        }else{
            f1 =(year1 + "-" + mes1+ "-" + dia1);
        }
        if(UF.isSelected()==true){
            try {
                CorteXUNAFECHA(f1);
            } catch (SQLException ex) {
                Logger.getLogger(VentanaCC.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VentanaCC.class.getName()).log(Level.SEVERE, null, ex);
            }
            fecha2.setVisible(false);
            lblAFecha.setVisible(false);
            
        }else if (P.isSelected()==true){
            fecha2.setVisible(true);
            lblAFecha.setVisible(true);
            String f2;
            int dia2 = (fecha2.getCalendar().get(Calendar.DAY_OF_MONTH));
            int mes2 =(fecha2.getCalendar().get(Calendar.MONTH) + 1);
            int year2 =(fecha2.getCalendar().get(Calendar.YEAR));
            if(mes2<10){
                f2 =(year2 + "-0" + mes2+ "-" + dia2);
            }else{
                f2 =(year2 + "-" + mes2+ "-" + dia2);
            }
            try {
                CorteXFECHAS(f1, f2);
            } catch (SQLException ex) {
                Logger.getLogger(VentanaCC.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VentanaCC.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        fecha1.setDate(null);
        fecha2.setDate(null);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
           listarCorte();
    }//GEN-LAST:event_formWindowActivated
 public void listarCorte()
    {   DefaultTableModel m1=(DefaultTableModel)tablaCorte.getModel();
        String sql="SELECT corte_caja,fecha_corte FROM corte_caja";
        try {
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
        cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
        s = cn.createStatement();
            ResultSet rs = sentencia.executeQuery(sql);
            m1.setRowCount(0);
            while (rs.next()) {
                Object []fila={rs.getString(2),rs.getString(1)};
                m1.addRow(fila);
            }
        }catch (ClassNotFoundException | SQLException e)
        {
            e.printStackTrace();
        } 
    }
    
    public void CorteXUNAFECHA(String f1)throws SQLException, ClassNotFoundException
    {
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
        cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
        s = cn.createStatement();
        String sql = "SELECT corte_caja,fecha_corte FROM corte_caja WHERE fecha_corte = '"+f1+"';";
        DefaultTableModel m=(DefaultTableModel)tablaCorte.getModel();
        m.setRowCount(0);
        ResultSet rs = s.executeQuery(sql);
        while(rs.next()){
        Object []fila={rs.getString(2),rs.getString(1)};
                m.addRow(fila);
        }
    }
       public void CorteXFECHAS(String f1,String f2) throws SQLException, ClassNotFoundException
         {
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        String conecctionUrl = "jdbc:sqlserver://"+this.servidor+";databaseName=burbuja2";
        cn = DriverManager.getConnection(conecctionUrl, this.usuario, this.contra);
        s = cn.createStatement();
        String sql = "SELECT corte_caja,fecha_corte FROM corte_caja WHERE fecha_corte between '"+f1+"' and '"+f2+"';";
        DefaultTableModel m=(DefaultTableModel)tablaCorte.getModel();
        m.setRowCount(0);
        ResultSet rs = s.executeQuery(sql);
        while(rs.next()){
        Object []fila={rs.getString(2),rs.getString(1)};
                m.addRow(fila);
        }
    }  
       public void corte()
       {
          String fecha=fecha_a;
          String sql="select caja from egresos where fecha_egreso='"+fecha+"';";
          String sql2="select sum(egreso) from egresos where fecha_egreso='"+fecha+"';";
          float caja=0;
          float tegresos=0;
          float tingresos=0;
          float Cc=0;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String conecctionUrl = "jdbc:sqlserver://"+servidor+":1433;databaseName=burbuja2";
            java.sql.Connection cn = DriverManager.getConnection(conecctionUrl,usuario,contra);
            Statement sentencia = cn.createStatement();
            ResultSet rs = sentencia.executeQuery(sql);
            String sql3="select sum(total_venta) total from venta where fecha='"+fecha+"';";
            ResultSet rs3 = sentenciaD.executeQuery(sql3);
            while (rs3.next()) {
            tingresos= rs3.getFloat(1);   
            }
            while (rs.next()) {
                caja=rs.getFloat(1);
            }
            ResultSet rs2 = sentencia.executeQuery(sql2);
            while (rs2.next()) {
                tegresos=rs2.getFloat(1);
            }   
        }catch (ClassNotFoundException | SQLException e)
        {
            e.printStackTrace();
        }      
         Cc=(caja+tingresos)-tegresos;
//         txtCD.setText(Cc+"");
       }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaCC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton P;
    private javax.swing.JRadioButton UF;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser fecha1;
    private com.toedter.calendar.JDateChooser fecha2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAFecha;
    private javax.swing.JLabel lblFecha;
    public static javax.swing.JTable tablaCorte;
    // End of variables declaration//GEN-END:variables
}
